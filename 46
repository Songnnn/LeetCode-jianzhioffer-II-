
class Solution {
public:
    int getCnt(int num) {
        if (num < 10) return 1;
        else if (num >= 10 && num <= 25) return 2;
        else if (num > 25 && num < 100) return 1;
        return 0;
    }

    int dp(int num) {
        //如果num的位数为1或2
        if (num < 100) return getCnt(num);
        //如果num的位数大于2
        else {
            int y = num % 100;
            if (y > 25) return dp(num / 10);
            else {
                //有可能遇到506这种情况，此时06不能组合
                int num1 = num / 10;
                if (num1 % 10 == 0) return dp(num / 10);
                else return dp(num / 10) + dp(num / 100);
            }
        }
    }

    int translateNum(int num) {
        /*
        * 这里用动态循环来做，设数字n有dp[n]种不同的翻译方式
        * dp[n+x]表示dp[n*10+x]，也就是数字n的后面直接添一个x
        * 令n的个位数*10+x=y，总结规律可以得到
        * 当y>25时，dp[n+x]=dp[n]
        * 当y<=25时，dp[n+x]=dp[n]+dp[n/10]
        * 如果n的位数为1或2，直接算出结果就行
        */
        return dp(num);
    }
};
