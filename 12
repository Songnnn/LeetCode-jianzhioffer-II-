//JAVA
//没过，不知道为什么
class Solution {
    public int traverse(int cnt,int i,int j,char[][]board,String word,int[][]tag){
        //cnt目前需要寻找word.charAt(cnt)
        if( i-1>=0 ){//向上走
            if( tag[i-1][j]==0 && board[i-1][j]==word.charAt(cnt) ){
                if( cnt==word.length()-1 ) return 1;
                tag[i-1][j]=1;
                return traverse(cnt+1,i-1,j,board,word,tag);
            } 
        }
        else if( j-1>=0 ){//向左走
            if( tag[i][j-1]==0 && board[i][j-1]==word.charAt(cnt) ){
                if( cnt==word.length()-1 ) return 1;
                tag[i][j-1]=1;
                return traverse(cnt+1,i,j-1,board,word,tag);
            }
        }
        else if( i+1<board.length ){//向下走
            if( tag[i+1][j]==0 && board[i+1][j]==word.charAt(cnt) ){
                if( cnt==word.length()-1 ) return 1;
                tag[i+1][j]=1;
                return traverse(cnt+1,i+1,j,board,word,tag);
            }
        }
        else if( j+1<board[0].length ){//向右走
            if( tag[i][j+1]==0 && board[i][j+1]==word.charAt(cnt) ){
                if( cnt==word.length()-1 ) return 1;
                tag[i][j+1]=1;
                return traverse(cnt+1,i,j+1,board,word,tag);
            }
        }
        return 0;
    }

    public boolean exist(char[][] board, String word) {
        int[][] tag=new int[board.length][board[0].length]; //访问标志
        for( int i=0 ; i<board.length ; i++ ){
            for( int j=0 ; j<board[0].length ; j++ ){
                //尝试每一个出发点
                tag[i][j]=1;
                if( traverse(1,i,j,board,word,tag)==1 ) return true; 
            }
        }
        return false;
    }
}
