//JAVA
class Solution {
    public int cuttingRope(int n) {
        //函数极值解出每段长为3时，总乘积最大
        if( n<=3 ) return n-1;
        else{
            int a=n/3;
            if( n==3*a ) return (int)Math.pow(3,a);
            else{
                if( n==3*a+1 ) return (int)(4*Math.pow(3,a-1));
                else return (int)(2*Math.pow(3,a));
            }
        }
        //还有一种动态规划的方法
        int[] dp=new int[n+1];
        for( int i=2 ; i<=n ; i++ ){
            for( int j=1 ; j<i ; j++ ){
                dp[i]=Math.max(dp[i],
                Math.max(j*dp[i-j],j*(i-j)));
            }
        }
        return dp[n];
    }
}
